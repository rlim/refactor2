function Q = nifti_mat44_inverse( R )
% --- Compute the inverse of a bordered 4x4 matrix.
% ---
% ---   - Some numerical code fragments were generated by Maple 8.
% ---   - If a singular matrix is input, the output matrix will be all zero.
% ---   - You can check for this by examining the [3,3] element, which will
% ---     be 1.0 for the normal case and 0.0 for the bad case.
% ---
% ---     The input matrix should have the form:
% ---        [ r11 r12 r13 v1 ]
% ---        [ r21 r22 r23 v2 ]
% ---        [ r31 r32 r33 v3 ]
% ---        [  0   0   0   1 ]
% ---
                                              % ---  INPUT MATRIX IS:  
   r11 = R(1,1); r12 = R(1,2); r13 = R(1,3);  % --- [ r11 r12 r13 v1 ]
   r21 = R(2,1); r22 = R(2,2); r23 = R(2,3);  % --- [ r21 r22 r23 v2 ]
   r31 = R(3,1); r32 = R(3,2); r33 = R(3,3);  % --- [ r31 r32 r33 v3 ] 
   v1  = R(1,4); v2  = R(2,4); v3  = R(3,4);  % --- [  0   0   0   1 ]

   deti = r11*r22*r33-r11*r32*r23-r21*r12*r33+ ...
          r21*r32*r13+r31*r12*r23-r31*r22*r13 ;

   if( deti ~= 0.0 ) deti = 1.0 / deti ;  end;

   Q(1,1) = deti*( r22*r33-r32*r23) ;
   Q(1,2) = deti*(-r12*r33+r32*r13) ;
   Q(1,3) = deti*( r12*r23-r22*r13) ;
   Q(1,4) = deti*(-r12*r23*v3+r12*v2*r33+r22*r13*v3- ...
                   r22*v1*r33-r32*r13*v2+r32*v1*r23) ;

   Q(2,1) = deti*(-r21*r33+r31*r23) ;
   Q(2,2) = deti*( r11*r33-r31*r13) ;
   Q(2,3) = deti*(-r11*r23+r21*r13) ;
   Q(2,4) = deti*( r11*r23*v3-r11*v2*r33-r21*r13*v3+ ...
                   r21*v1*r33+r31*r13*v2-r31*v1*r23) ;

   Q(3,1) = deti*( r21*r32-r31*r22) ;
   Q(3,2) = deti*(-r11*r32+r31*r12) ;
   Q(3,3) = deti*( r11*r22-r21*r12) ;
   Q(3,4) = deti*(-r11*r22*v3+r11*r32*v2+r21*r12*v3- ...
                   r21*r32*v1-r31*r12*v2+r31*r22*v1) ;

   Q(4,1) = 0; 
   Q(4,2) = 0;  
   Q(4,3) = 0 ;
   Q(4,4) = 1;
   if (deti == 0.0) Q(4,4) = 0; end; % --- failure flag if deti == 0 */


